@using Ext.Net
@using Ext.Net.MVC
@using InputType = Ext.Net.InputType
@model VentureManagement.Models.UserRegister

@{
    ViewBag.Title = "用户注册";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();
}

@section headtag
{
    <style>
        .search-item {
            font          : normal 11px tahoma, arial, helvetica, sans-serif;
            padding       : 3px 10px 3px 10px;
            border        : 1px solid #fff;
            border-bottom : 1px solid #eeeeee;
            white-space   : normal;
            color         : #555;
        }
        
        .search-item h3 {
            display     : block;
            font        : inherit;
            font-weight : bold;
            color       : #222;
            margin      :0px;
        }

        .search-item h3 span {
            float       : right;
            font-weight : normal;
            margin      : 0 0 5px 5px;
            width       : 100px;
            display     : block;
            clear       : none;
        } 
        
        p { width: 650px; }
        
        .ext-ie .x-form-text { position : static !important; }
    </style>    

    <script>
        var resetCreateForm = function() {
            App.userID.setValue('');
            App.userName.setValue('');
            App.displayName.setValue('');
            App.userPassword.setValue('');
            App.userConfirmPassword.setValue('');
            App.userEmail.setValue('');
            App.userMobile.setValue('');
            App.OrganizationId.setValue('');
            App.RoleId.setValue('');
        };
    </script>
}

@section menu
{
    @(X.FormPanel()
        .Title("")
        .AutoScroll(true)
        .BodyPadding(5)
        .Layout(LayoutType.Column)
        .FieldDefaults(fd => {
            fd.LabelAlign = LabelAlign.Left;
            fd.MsgTarget = MessageTarget.Side;
        })
        .Items(
            X.FieldSet()
                .ID("newUser")
                .Title("新用户")
                .ColumnWidth(0.3)
                .MarginSpec("10 10 10 10")
                .Defaults(d => {
                    d.Add(new Parameter("Width", "240"));
                    d.Add(new Parameter("LabelWidth", "90"));
                })
                .Items(
                    X.TextField()
                        .ID("userID")
                        .Name("userID")
                        .EmptyText("请输入用户ID")
                        .FieldLabel("用户ID")
                        .Hidden(true),
                    X.TextField()
                        .ID("userName")
                        .Name("userName")
                        .EmptyText("请输入用户名")
                        .FieldLabel("用户名"),
                    X.TextField()
                        .ID("displayName")
                        .Name("displayName")
                        .EmptyText("请输入真名")
                        .FieldLabel("真名"),
                    X.TextField()
                        .ID("userPassword")
                        .Name("userPassword")
                        .EmptyText("请输入密码")
                        .FieldLabel("密码")
                        .InputType(InputType.Password),
                    X.TextField()
                        .ID("userConfirmPassword")
                        .Name("userConfirmPassword")
                        .EmptyText("请确认密码")
                        .FieldLabel("确认密码")
                        .InputType(InputType.Password),
                    X.TextField()
                        .ID("userEmail")
                        .Name("userEmail")
                        .EmptyText("请输入邮箱")
                        .FieldLabel("邮箱")
                        .InputType(InputType.Email),
                    X.TextField()
                        .ID("userMobile")
                        .Name("userMobile")
                        .EmptyText("请输入手机号码")
                        .FieldLabel("手机号码"),
                        //.InputType(InputType.Number),
                    X.ComboBox()
                        .ID("OrganizationId")
                        .FieldLabel("部门")
                        .EmptyText("请输入关键字或*")
                        .DisplayField("OrganizationName")
                        .ValueField("OrganizationId")
                        .TypeAhead(true)
                        .PageSize(15)
                        .HideBaseTrigger(true)
                        .MinChars(0)
                        .TriggerAction(TriggerAction.All)
                        .ListConfig(
                            Html.X().BoundList()
                            .LoadingText("搜索...")
                            .ItemTpl(Html.X().XTemplate()
                            .Html(@<text>
                                <div class="search-item">
                                    <h3><span>{OrganizationName}</span></h3>
                                    {Description}
                                </div>
                            </text>))
                        )
                        .Store(Html.X().Store()
                        .AutoLoad(true)
                        .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("GetAllOrganizations"))
                            .ActionMethods(am => am.Read = HttpMethod.POST)
                            .Reader(Html.X().JsonReader().Root("data"))
                        )
                        .Model(Html.X().Model()
                            .Fields(
                                Html.X().ModelField().Name("OrganizationId"),
                                Html.X().ModelField().Name("OrganizationName"),
                                Html.X().ModelField().Name("Description")
                            )
                        )
                        ),
                    X.ComboBox()
                        .ID("RoleId")
                        .FieldLabel("角色")
                        .EmptyText("请输入关键字或*")
                        .DisplayField("RoleName")
                        .ValueField("RoleId")
                        .TypeAhead(true)
                        .PageSize(15)
                        .HideBaseTrigger(true)
                        .MinChars(0)
                        .TriggerAction(TriggerAction.All)
                        .ListConfig(
                            Html.X().BoundList()
                            .LoadingText("搜索...")
                            .ItemTpl(Html.X().XTemplate()
                            .Html(@<text>
                                <div class="search-item">
                                    <h3><span>{RoleName}</span></h3>
                                    {Description}
                                </div>
                            </text>))
                        )
                        .Store(Html.X().Store()
                        .AutoLoad(true)
                        .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("GetAllRoles"))
                            .ActionMethods(am => am.Read = HttpMethod.POST)
                            .Reader(Html.X().JsonReader().Root("data"))
                        )
                        .Model(Html.X().Model()
                            .Fields(
                                Html.X().ModelField().Name("RoleId"),
                                Html.X().ModelField().Name("RoleName"),
                                Html.X().ModelField().Name("Description")
                            )
                        )
                        ),                        
                    X.InfoPanel()
                        .Layout(LayoutType.HBox)
                        .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Middle}) 
                        .Items(              
                            X.Button()
                                .ID("RegisterBtn")
                                .Text("注册")
                                .Margin(10)
                                .Width(80)
                                .Icon(Icon.NewBlue)
                                .FormBind(true)
                                .ColSpan(1)
                                .Disabled(true)
                                .DirectEvents(de => {
                                    de.Click.Url = Url.Action("CreateUser");
                                    de.Click.ExtraParams.Add(new Parameter("userID", "App.userID.getValue()", ParameterMode.Raw));
                                    de.Click.ExtraParams.Add(new Parameter("userName", "App.userName.getValue()", ParameterMode.Raw));
                                    de.Click.ExtraParams.Add(new Parameter("displayName", "App.displayName.getValue()", ParameterMode.Raw));
                                    de.Click.ExtraParams.Add(new Parameter("userPassword", "App.userPassword.getValue()", ParameterMode.Raw));
                                    de.Click.ExtraParams.Add(new Parameter("userConfirmPassword", "App.userConfirmPassword.getValue()", ParameterMode.Raw));
                                    de.Click.ExtraParams.Add(new Parameter("userEmail", "App.userEmail.getValue()", ParameterMode.Raw));
                                    de.Click.ExtraParams.Add(new Parameter("userMobile", "App.userMobile.getValue()", ParameterMode.Raw));
                                    de.Click.ExtraParams.Add(new Parameter("OrganizationId", "App.OrganizationId.getValue()", ParameterMode.Raw));
                                    de.Click.ExtraParams.Add(new Parameter("RoleId", "App.RoleId.getValue()", ParameterMode.Raw));
                                    de.Click.Success = "resetCreateForm();";
                                }),
                            X.Button()
                                .ID("CancelBtn")
                                .Text("取消")
                                .Width(80)
                                .Margin(10)
                                .ColSpan(1)
                                .Icon(Icon.Cancel)
                                .FormBind(true)
                                .Handler("resetCreateForm();")
                                .DirectEvents(de =>
                                {
                                    de.Click.Action = "Cancel";
                                })
                        )
                    )
            )
        )
}
