@using Ext.Net
@using Ext.Net.MVC
@using InputType = Ext.Net.InputType
@model VentureManagement.Models.User

@{
    ViewBag.Title = "用户注册";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();
}

@section headtag
{
<style>
    .search-item {
        font          : normal 11px tahoma, arial, helvetica, sans-serif;
        padding       : 3px 10px 3px 10px;
        border        : 1px solid #fff;
        border-bottom : 1px solid #eeeeee;
        white-space   : normal;
        color         : #555;
    }
        
    .search-item h3 {
        display     : block;
        font        : inherit;
        font-weight : bold;
        color       : #222;
        margin      :0px;
    }

    .search-item h3 span {
        float       : right;
        font-weight : normal;
        margin      : 0 0 5px 5px;
        width       : 100px;
        display     : block;
        clear       : none;
    } 
        
    p { width: 650px; }
        
    .ext-ie .x-form-text { position : static !important; }
</style>    

<script>
    var imageVerificationCodeClick = function () {
        App.imageVerificationCode.setImageUrl("@Url.Action("VerificationCode")?" + new Date());
    };
</script>
}

@section menu
{
    @(Html.X().TaskManager()
        .ID("SmsTaskManager")
        .Tasks(X.Task()
            .TaskID("SmsTask")
            .Interval(1000)
            .AutoRun(false)
            .DirectEvents(de => de.Update.Action = "RefreshProgress")
        ))

    @(Html.X().FormPanel()
          //.Region(Region.Center)
          .Layout(LayoutType.Table)
          .LayoutConfig(new TableLayoutConfig{Columns = 4})
          .Width(350)
          .ID("RegisterUser")
          .Frame(true)
          .Title("用户信息")
          .Url(Url.Action("Submit",new {verificationCode="App.verificationCode.getValue()",
              roleId="App.RoleId.getValue()",orgId="App.OrgId.getValue()",
              smsCode="App.SmsCode.getValue()",ParameterMode.Raw}))
          .BodyPadding(10)
          .Border(true)
          .FieldDefaults(fd =>
          {
              fd.LabelAlign = LabelAlign.Right;
              fd.LabelPad = 20;
              fd.MsgTarget = MessageTarget.Under;
          })
          .Buttons(
              X.Button()
                  .Text("注册")
                  .Icon(Icon.Accept)
                  .Handler("App.RegisterUser.submit();"),
              X.Button()
                  .Text("取消")
                  .Icon(Icon.Cancel)
                  .Handler("document.location.href='login';")
          )
          .ButtonAlign(Alignment.Center)
          .Padding(10)
          .Items(
              X.TextFieldFor(u=>u.UserId)
                  .ID("userID")
                  .ColSpan(4)
                  .EmptyText("请输入用户ID")
                  .Hidden(true),
              X.TextFieldFor(u=>u.UserName)
                  .ID("userName")
                  .ColSpan(4)
                  .AllowBlank(false)
                  .EmptyText("请输入用户名"),
              X.TextFieldFor(u=>u.DisplayName)
                  .ID("displayName")
                  .ColSpan(4)
                  .AllowBlank(false)
                  .Name("displayName")
                  .EmptyText("请输入实名"),
              X.TextFieldFor(u=>u.Password)
                  .ID("PasswordField")
                  .ColSpan(4)
                  .EmptyText("请输入密码")
                  .MinLength(8)
                  .MinLengthText("密码最短为8个字符")
                  .AllowBlank(false)
                  .InputType(InputType.Password),
              X.TextField()
                  .ID("userConfirmPassword")
                  .ColSpan(4)
                  .Vtype("password")
                  .VtypeText("两次输入的密码不一致")
                  .EmptyText("请确认密码")
                  .AllowBlank(false)
                  .InputType(InputType.Password)
                  .FieldLabel("确认密码")
                  .CustomConfig(p=>p.Add(new ConfigItem("initialPassField","PasswordField",ParameterMode.Value))),
              X.TextFieldFor(u=>u.Email)
                  .ID("userEmail")
                  .ColSpan(4)
                  .EmptyText("请输入邮箱")
                  .AllowBlank(false)
                  .InputType(InputType.Email),
              X.TextFieldFor(u=>u.Mobile)
                  .ID("userMobile")
                  .ColSpan(4)
                  .Regex("^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$")
                  .RegexText("请输入合法的手机号")
                  .Listeners(ls=>ls.ValidityChange.Handler="App.SmsCodeSender.setDisabled(!isValid);App.SmsCode.setDisabled(!isValid);")
                  .EmptyText("请输入手机号码"),
              X.ComboBox()
                  .ID("OrgId")
                  .FieldLabel("部门")
                  .ColSpan(4)
                  .AllowBlank(false)
                  .EmptyText("请输入关键字或*")
                  .DisplayField("OrganizationName")
                  .ValueField("OrganizationId")
                  .TypeAhead(true)
                  //.QueryMode(DataLoadMode.Local)
                  //.ForceSelection(true)
                  //.Editable(false)
                  .PageSize(15)
                  .HideBaseTrigger(true)
                  .MinChars(0)
                  .TriggerAction(TriggerAction.All)
                  .ListConfig(
                      Html.X().BoundList()
                          .LoadingText("搜索...")
                          .ItemTpl(Html.X().XTemplate()
                              .Html(@<text>
                                        <div class="search-item">
                                            <h3>{OrganizationName}</h3>
                                        </div>
                                     </text>))
                  )
                  .Store(Html.X().Store()
                      .AutoLoad(true)
                      .Proxy(Html.X().AjaxProxy()
                          .Url(Url.Action("GetAllOrganizations"))
                          .ActionMethods(am => am.Read = HttpMethod.POST)
                          .Reader(Html.X().JsonReader().Root("data"))
                      )
                      .Model(Html.X().Model()
                          .Fields(
                              Html.X().ModelField().Name("OrganizationId"),
                              Html.X().ModelField().Name("OrganizationName"),
                              Html.X().ModelField().Name("Description")
                          )
                      )
                  ),
              X.ComboBox()
                  .ID("RoleId")
                  .ColSpan(4)
                  .FieldLabel("角色")
                  .AllowBlank(false)
                  .EmptyText("请输入关键字或*")
                  .DisplayField("RoleName")
                  .ValueField("RoleId")
                  .TypeAhead(true)
                  //.QueryMode(DataLoadMode.Local)
                  //.ForceSelection(true)
                  //.Editable(false)
                  .PageSize(15)
                  .HideBaseTrigger(true)
                  .MinChars(0)
                  .TriggerAction(TriggerAction.All)
                  .ListConfig(
                      Html.X().BoundList()
                          .LoadingText("搜索...")
                          .ItemTpl(Html.X().XTemplate()
                              .Html(@<text>
                                        <div class="search-item">
                                            <h3>{RoleName}</h3>
                                        </div>
                                     </text>))
                  )
                  .Store(Html.X().Store()
                      .AutoLoad(true)
                      .Proxy(Html.X().AjaxProxy()
                          .Url(Url.Action("GetAllRoles"))
                          .ActionMethods(am => am.Read = HttpMethod.POST)
                          .Reader(Html.X().JsonReader().Root("data"))
                      )
                      .Model(Html.X().Model()
                          .Fields(
                              Html.X().ModelField().Name("RoleId"),
                              Html.X().ModelField().Name("RoleName"),
                              Html.X().ModelField().Name("Description")
                          )
                      )
                  ),

              X.TextField()
                  .ID("verificationCode")
                  .ColSpan(4)
                  .AllowBlank(false)
                  .EmptyText("请输入验证码")
                  .FieldLabel("验证码"),
              //X.Button()
              //    .Text("刷新验证码")
              //    .Region(Region.Center	)
              //    .ColSpan(3)
              //    .Handler("imageVerificationCodeClick();"),

            Html.X().ImageButton()
                .ColSpan(3)
                .ID("VerificationCodeImage")
                //.ToolTip("点击刷新")
                .ID("imageVerificationCode")
                .ImageUrl(Url.Action("VerificationCode","Register")),
                //.Listeners(ls =>
                //{
                //    ls.Click.Handler = "imageVerificationCodeClick();";
                //    ls.AfterRender.Handler = "imageVerificationCodeClick()";
                //}),
            Html.X().LinkButton()
                    .Text("看不清?换一张")
                    .Padding(10)
                    .ColSpan(1)
                    .OnClientClick("imageVerificationCodeClick();"),
              X.Button()
                  .ColSpan(1)
                  .Padding(5)
                  .Disabled(true)
                  .ID("SmsCodeSender")
                  .Text("获取短信验证码")
                  .DirectClickAction("SendSmsCode").Params(p=>p.Add(new {mobile="App.SendSmsCode.getValue()",ParameterMode.Raw})),
              X.TextField()
                  .Disabled(true)
                  .Padding(5)
                  .ID("SmsCode")
                  .ColSpan(3)
          ))
}
