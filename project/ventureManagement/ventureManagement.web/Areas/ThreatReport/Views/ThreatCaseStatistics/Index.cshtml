@using System.Activities.Statements
@using Ext.Net
@using Ext.Net.MVC
@using VentureManagement.Web.Areas.Report.Models
@*@using InputType = Ext.Net.InputType*@

@{
    ViewBag.Title = "";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();
}

@section headtag
{
}

@section menu
{
    @(
        Html.X().FormPanel()
            .ID("statisticsReportForm")
            .Icon(Icon.Report)
            .Frame(true)
            .Title("隐患排查预警统计分析")
            .Width(1000)
            .AutoScroll(true)
            .DefaultAnchor("100%")          
            .Url(Url.Action("Submit",new {containerId="statisticsReportForm",ParameterMode.Raw}))
            .TopBar(
                Html.X().Toolbar()
                    .Flat(true)
                    .Items(
                        Html.X().ComboBox()
                            .ID("threatCategory")
                            .LabelStyle("padding-bottom:6px;")
                            .FieldLabel("隐患大类")
                            .LabelAlign(LabelAlign.Top)
                            .MaxWidth(120)
                            .Editable(false)
                            .QueryMode(DataLoadMode.Local)
                            .TriggerAction(TriggerAction.All)
                            .SelectOnFocus(true)
                            .DisplayField("CategoryName")
                            .ValueField("CategoryName")
                            .Listeners(ls =>
                                ls.Select.Handler = "App.threatType.clearValue(); App.threatType.getStore().load();")
                            .ValueNotFoundText("Loading...")
                            .Store(Html.X().Store()
                                .AutoLoad(true)
                                .Model(Html.X().Model()
                                    .IDProperty("ThreatCategoryId")
                                    .Fields(
                                        new ModelField("CategoryName", ModelFieldType.String) {Mapping = "CategoryName"}
                                    )
                                )
                                .Proxy(Html.X().AjaxProxy()
                                    .Url(Url.Action("GetThreatCategory"))
                                    .Reader(Html.X().JsonReader().Root("data"))
                                )
                            ),
                        Html.X().ComboBox()
                            .ID("threatType")
                            .LabelStyle("padding-bottom:6px;")
                            .FieldLabel("隐患小类")
                            .LabelAlign(LabelAlign.Top)
                            .MaxWidth(120)
                            .Editable(false)
                            .QueryMode(DataLoadMode.Local)
                            .TriggerAction(TriggerAction.All)
                            .SelectOnFocus(true)
                            .DisplayField("TypeName")
                            .ValueField("TypeName")
                            .ValueNotFoundText("Loading...")
                            .Store(Html.X().Store()
                                .AutoLoad(true)
                                .Model(Html.X().Model()
                                    .IDProperty("ThreatTypeId")
                                    .Fields(
                                        new ModelField("TypeName", ModelFieldType.String) {Mapping = "TypeName"}
                                    )
                                )
                                .Proxy(Html.X().AjaxProxy()
                                    .Url(Url.Action("GetThreatType"))
                                    .Reader(Html.X().JsonReader().Root("data"))
                                )
                                .Parameters(ps =>
                                    ps.Add(new StoreParameter("category", "App.threatCategory.getValue()", ParameterMode.Raw))
                                )
                            ),                            
                        Html.X().ToolbarSpacer().Width(10),
                        Html.X().DateColumn()
                            .Text("查询起始时间:")
                            .Height(45)
                            .HeaderItems(
                                Html.X().DateField()
                                    .ID("startTime")
                                    .Editable(false)
                            ),
                        Html.X().ToolbarSpacer().Width(10),    
                        Html.X().DateColumn()
                            .Text("查询结束时间:")
                            .Height(45)
                            .HeaderItems(
                                Html.X().DateField()
                                    .ID("endTime")
                                    .Editable(false)
                            ),      
                        Html.X().ToolbarSpacer().Width(10),                             
                        Html.X().Button()
                            .Text("生成报表")
                            .Height(45)
                            .Icon(Icon.Find)
                            .Handler("App.statisticsReportForm.submit();"),
                        Html.X().ToolbarSpacer().Width(10),                             
                        Html.X().Button()
                            .Text("打印报表")
                            .Height(45)
                            .Icon(Icon.Printer)
                            .Handler("window.print();"),
                        Html.X().ToolbarFill()
                        )
                    )                                
    )   
}