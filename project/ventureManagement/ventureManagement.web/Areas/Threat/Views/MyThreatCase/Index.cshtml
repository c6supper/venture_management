@using Ext.Net
@using Ext.Net.MVC

@{
    ViewBag.Title = "待处理隐患预警";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();
}

@section headtag
{
    <script>
    </script>
}

@section menu
{
    @(
        X.GridPanelForModel()
            .Title("待处理")
            .ID("ThreatGrid")
            .Frame(true)
            .Height(400)
            .ColumnModel(
                Html.X().Column().DataIndex("ThreatCaseId").Text("Id").Hidden(true),                    
                Html.X().Column().DataIndex("ThreatCaseLocation").Text("隐患地点"),
                Html.X().Column().DataIndex("ThreatCaseCategory").Text("隐患大类"),
                Html.X().Column().DataIndex("ThreatCaseType").Text("隐患小类"),
                Html.X().Column().DataIndex("ThreatCaseSeverity").Text("隐患严重等级"),
                Html.X().Column().DataIndex("ThreatCasePassibility").Text("隐患可能性等级"),
                Html.X().Column().DataIndex("ThreatCaseRisk").Text("隐患风险指数"),
                Html.X().Column().DataIndex("ThreatCaseLevel").Text("隐患分级"),
                Html.X().DateColumn().DataIndex("ThreatCaseLimitTime").Text("整改期限").Format("yyyy-MM-dd"),
                Html.X().DateColumn().DataIndex("ThreatCaseFoundTime").Text("隐患发现时间").Format("yyyy-MM-dd"),
                Html.X().DateColumn().DataIndex("ThreatCaseReportTime").Text("隐患上报时间").Format("yyyy-MM-dd"),
                Html.X().Column().DataIndex("ThreatCaseStatus").Text("状态"))
            .Plugins(
                    X.FilterHeader()
                )

            .SelectionModel(
                Html.X().RowSelectionModel()
                    .Mode(SelectionMode.Single)
                    .ID("GridSelector")
                    .Listeners(l =>
                    {
                        l.Select.Handler = "App.ThreatCaseDetailWin.show(this);";
                    })
            )
    )

    @(X.Window()
          .ID("ThreatCaseDetailWin")
          .Width(700)
          .Height(400)
          .Modal(true)
          .AutoRender(false)
          .AutoScroll(false)
          .Collapsible(false)
          .ConstrainHeader(true)
          .Constrain(true)
          .Maximized(true)
          .Maximizable(false)
          .Resizable(false)
          .Hidden(true)
          .Loader(X.ComponentLoader()
              .Url(Url.Action("Detail"))
              .Params(new Parameter("threatCaseId","App.ThreatGrid.getSelectionModel().getLastSelected().get('ThreatCaseId')",ParameterMode.Raw))
              .Mode(LoadMode.Frame)
              .LoadMask(lm => lm.ShowMask = true)
          )
          .Listeners(ls =>
          {
              ls.BeforeHide.Handler = "document.location.reload();";
              ls.BeforeClose.Handler = "document.location.reload();";
          }))
}