@{
    ViewBag.Title = "集团组织结构";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();
}

@section headtag
{
    <script>
        var resetCreateForm = function() {
            App.SubordinateDepartment.setValue('');
            App.Description.setValue('');
            App.newOrganization.hide();
        };

        var filterTree = function (tf, e) {
            var tree = this.up("treepanel"),
                text = tf.getRawValue();

            tree.clearFilter();

            if (Ext.isEmpty(text, false)) {
                return;
            }

            if (e.getKey() === Ext.EventObject.ESC) {
                clearFilter();
            } else {
                var re = new RegExp(".*" + text + ".*", "i");

                tree.filterBy(function (node) {
                    return re.test(node.data.text);
                });
            }
        };

        var clearFilter = function () {
            var field = this,
                tree = this.up("treepanel");

            field.setValue("");
            tree.clearFilter(true);
            tree.getView().focus();
        };

    </script>
}

    

@section menu
{
    @(X.FormPanel()
          .Title("")
          .AutoScroll(true)
          .Height(400)
          .BodyPadding(5)
          .ManageHeight(true)
          .Layout(LayoutType.Column)
          .FieldDefaults(fd => {
                                   fd.LabelAlign = LabelAlign.Left;
                                   fd.MsgTarget = MessageTarget.Side;
          })
          .Items(
              X.FieldSet()
                  .Hidden(true)
                  .ID("newOrganization")
                  .Title("新增部门信息")
                  .ColumnWidth(0.3)
                  .MarginSpec("10 10 10 10")
                  .Defaults(d => {
                                     d.Add(new Parameter("Width", "240"));
                                     d.Add(new Parameter("LabelWidth", "90"));
                  })
                  .Items(
                       X.Hidden().Name("organizationId").ID("SelectedOrgId"),
                       X.ComboBox()
                        .ID("SuperiorDepartmentId")
                        .FieldLabel("上级部门")
                        .EmptyText("请输入关键字或*搜索所有")
                        .DisplayField("OrganizationName")
                        .ValueField("OrganizationId")
                        .TypeAhead(true)
                        .PageSize(15)
                        .HideBaseTrigger(true)
                        .MinChars(0)
                        .TriggerAction(TriggerAction.All)
                        .ListConfig(Html.X().BoundList()
                            .LoadingText("搜索...")
                            .ItemTpl(Html.X().XTemplate()
                                .Html(@<text>
                                    <div class="search-item">
                                        <h3>{OrganizationName}</h3>
						            </div>
                                </text>)
                            )
                        )
                        .Store(Html.X().Store()
                            .ID("UserStore")
                            .AutoLoad(false)
                            .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("GetAllOrganizations"))
                                .ActionMethods(am => am.Read = HttpMethod.POST)
                                .Reader(Html.X().JsonReader().Root("data"))
                            )
                            .Model(Html.X().Model()
                                .Fields(
                                    Html.X().ModelField().Name("OrganizationId"),
                                    Html.X().ModelField().Name("OrganizationName"),
                                    Html.X().ModelField().Name("Description")
                                )
                            )
                        ),
                      X.TextField()
                          .ID("SubordinateDepartment")
                          .Name("SubordinateDepartment")
                          .EmptyText("请输入新建部门名")
                          .FieldLabel("下级部门"),
                      X.TextField()
                          .ID("Description")
                          .Name("Description")
                          .FieldLabel("备注"),  
                      X.Panel()
                          .Layout(LayoutType.HBox)
                          .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Middle}) 
                          .Items(              
                              X.Button()
                                    .Text("提交")
                                    .Margin(10)
                                    .Width(80)
                                    .Icon(Icon.Add)
                                    .FormBind(true)
                                    .ColSpan(1)
                                    .DirectEvents(de => {
                                        de.Click.Url = Url.Action("CreateOrganization");
                                        de.Click.ExtraParams.Add(new Parameter("superiorDepartmentId", "App.SuperiorDepartmentId.getValue()", ParameterMode.Raw));
                                        de.Click.ExtraParams.Add(new Parameter("subordinateDepartment", "App.SubordinateDepartment.getValue()", ParameterMode.Raw));
                                        de.Click.ExtraParams.Add(new Parameter("description", "App.Description.getValue()", ParameterMode.Raw));
                                        de.Click.Success = "resetCreateForm();";
                                    }),
                              X.Button()
                                  .Text("取消")
                                  .Width(80)
                                  .Margin(10)
                                  .ColSpan(1)
                                  .Icon(Icon.Cancel)
                                  .FormBind(true)
                                  .Handler("resetCreateForm();")
                          )
                  ),

              X.TreePanel()
                  .ID("OrganizationTreePanel")
                  .Title("集团组织结构")
                  .ColumnWidth(0.6)
                  .ColumnLines(true)
                  .Collapsible(true)
                  .UseArrows(true)
                  .RootVisible(false)
                  .MultiSelect(true)
                  .SingleExpand(true)
                  .FolderSort(true)
                  .AutoScroll(true)
                  .TopBar(Html.X().Toolbar()
                      .Items(
                          Html.X().Button()
                          .Text("新增")
                          .Icon(Icon.CommentAdd)
                          .Handler("App.newOrganization.show();"),
                        Html.X().Button()
                            .Text("删除")
                            .Icon(Icon.CommentDelete)
                            .DirectEvents(de =>
                            {
                                de.Click.Url = Url.Action("DeleteOrganization");
                                de.Click.ExtraParams.Add(new Parameter("organizationId", "App.SelectedOrgId.getValue()", ParameterMode.Raw));
                                de.Click.Confirmation.ConfirmRequest = true;
                                de.Click.Confirmation.BeforeConfirm = "config.confirmation.message = '是否确定要删除'";
                            })
                      )
                  )
                  .Fields(
                      X.ModelField().Name("organizationId"),
                      X.ModelField().Name("organizationName"),
                      X.ModelField().Name("Description")
                  )
                  .ColumnModel(    
                      X.Column()
                          .Flex(0)
                          .Hidden(true)
                          .Text("部门Id")
                          .DataIndex("organizationId"),
                          
                      X.TreeColumn()
                          .Flex(3)
                          .Text("部门")
                          .DataIndex("organizationName"),
                    
                      X.Column()
                          .Flex(2)
                          .Text("备注")
                          .DataIndex("Description")                  
                  )
                  .Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { this.up('form').getForm().loadRecord(selected[0]); }")
                  .Root(Model)
                  .TopBarItem(
                    Html.X().ToolbarTextItem().Text("关键字:"),
                    Html.X().ToolbarSpacer(),
                    Html.X().TriggerField()
                        .EnableKeyEvents(true)
                        .Triggers(
                            Html.X().FieldTrigger().Icon(TriggerIcon.Clear)
                        )
                        .Listeners(l => {
                            l.KeyUp.Fn = "filterTree";
                            l.KeyUp.Buffer = 250;

                            l.TriggerClick.Fn = "clearFilter";
                        })
                )
          ))
}